How did viewing a diff between two versions of a file help you see the bug that was introduced?


Helped me seeing the part of the code that was changed from one version to another.


How could having easy access to the entire history of a file make you a more efficient programmer in the long term?


It helps since you can see how was the original escope of the app and how it has been evolving and how it has changed from the beggining until now.


What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?


The pros of choosing a manually aproach is that you have a more "logical" control of you file, saving it only when meaninfull changes has been made of. The cons is if you forget to commit your file and a lot of changes has been made the logical structure of version can be compromised, since you're going to have a bad time seeking for a potential bug in that version.

On the other hand, having a automatically saving system is good in case of forget to save your work. But like said before, since the commitments aren't done because of something meaninfull, but because it's schedulle, you can loose track of important code changins.


Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

I think it happens because Git is designed for programming. So, sometimes you have to do modifications in multiples files. 

Google Docs in the other hand deals if much simplier kinds of files, like a richformat text, which doesn't have any multiple files linked together.


How can you use the commands git log and git diff to view the history of files?

You can use 'git log' to view all the commitments made with the files. After that, if you want to see the changes, all you have to do is use the command 'git diff' to see the lines that have been alterated. If you just want to see how much lines were modified just type 'git diff --shortstat'.

How might using version control make you more confident to make changes that could break something?

The usage of a version controller gives you more confidence because won't be afraid of break you entirely work. 


Now that you have your workspace set up, what do you want to try using Git for?

For everything related to programming. Git is a very powerfull tool and must be used in every single projects.


